@model IEnumerable<ManagementSystem.Models.DTOs.FootwearGetAllDTO>

@{
    ViewData["Title"] = "Calçados";
    var footwearList = Model?.ToList();
}

<div class="container mt-4">
    <!-- Cabeçalho -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h2 class="fw-bold">👟 Página de Calçados</h2>
            <p class="text-muted">Visualize, edite ou adicione calçados ao estoque da loja.</p>
        </div>
        <a class="btn btn-primary" href="@Url.Action("Create", "Footwear")">
            <i class="bi bi-plus-lg"></i> Adicionar Calçado
        </a>
    </div>

    <!-- Cards de resumo -->
    <div class="row text-center mb-4">
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h6 class="text-muted">Itens em Estoque</h6>
                    <h3 id="totalQtd">0</h3>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h6 class="text-muted">Valor Total</h6>
                    <h3 id="totalValor">R$ 0,00</h3>
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="card shadow-sm">
                <div class="card-body">
                    <h6 class="text-muted">Marcas Únicas</h6>
                    <h3 id="totalMarcas">0</h3>
                </div>
            </div>
        </div>
    </div>

    <!-- Tabela -->
    <table class="table table-hover">
        <thead class="table-light">
            <tr>
                <th>👟 Nome</th>
                <th>🖼 Imagem</th>
                <th>📦 SKU</th>
                <th>🏷 Marca</th>
                <th>🎯 Modalidade</th>
                <th>👞 Tipo</th>
                <th>🔢 Tamanho</th>
                <th>📊 Quantidade</th>
                <th>💰 Preço</th>
                <th>⚙ Ações</th>
            </tr>
        </thead>
        <tbody id="footwearTableBody">
            <!-- Conteúdo preenchido dinamicamente -->
        </tbody>
    </table>
    <p class="text-muted">Total de <span id="totalItemsDisplay">0</span> itens encontrados</p>
</div>

@section Scripts {
    <script>
        let allFootwear = @Html.Raw(Json.Serialize(Model));
        let filteredFootwear = [...allFootwear];

        function displayItems() {
            const tbody = document.getElementById('footwearTableBody');

            if (filteredFootwear.length === 0) {
                tbody.innerHTML = `<tr><td colspan="10" class="text-center">
                    <h5 class="mt-3">Nenhum item encontrado</h5>
                    <p class="text-muted">Tente ajustar os filtros ou termos de busca.</p>
                </td></tr>`;
            } else {
                tbody.innerHTML = filteredFootwear.map(item => `
                    <tr>
                        <td>${item.footwear.name}</td>
                        <td>
                            ${item.footwear.image ? 
                                `<img src="${item.footwear.image}" class="img-thumbnail" style="max-width:50px">` :
                                `<span class="badge bg-secondary">${item.footwear.name.charAt(0)}</span>`
                            }
                        </td>
                        <td>${item.footwear.sku || 'N/A'}</td>
                        <td>${item.footwear.brand}</td>
                        <td>${item.footwear.modalities}</td>
                        <td>${item.footwear.typeOfFootwear}</td>
                        <td>${item.footwear.size}</td>
                        <td>${item.quantity}</td>
                        <td>R$ ${item.footwear.price.toFixed(2)}</td>
                        <td>
                            <a href="/Footwear/Details/${item.footwear.id}" class="btn btn-warning btn-sm" title="Visualizar">👁</a>
                            <a href="/Footwear/Edit/${item.footwear.id}" class="btn btn-primary btn-sm" title="Editar">✏</a>
                            <button class="btn btn-danger btn-sm" onclick="confirmDelete(${item.footwear.id})" title="Excluir">🗑</button>
                        </td>
                    </tr>`).join('');
            }

            document.getElementById('totalItemsDisplay').textContent = filteredFootwear.length;
            updateSummary();
        }

        function updateSummary() {
            const totalQtd = filteredFootwear.reduce((acc, x) => acc + x.quantity, 0);
            const totalValor = filteredFootwear.reduce((acc, x) => acc + (x.footwear.price * x.quantity), 0);
            const marcasUnicas = new Set(filteredFootwear.map(x => x.footwear.brand)).size;

            document.getElementById('totalQtd').textContent = totalQtd;
            document.getElementById('totalValor').textContent = `R$ ${totalValor.toFixed(2)}`;
            document.getElementById('totalMarcas').textContent = marcasUnicas;
        }

        document.addEventListener('DOMContentLoaded', () => {
            displayItems();
        });
    </script>
}
